{"ast":null,"code":"import { catchError, map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ContactService = /*#__PURE__*/(() => {\n  class ContactService {\n    constructor(http) {\n      this.http = http;\n      this.mailApi = 'https://nithin-annam-portfolio.azurewebsites.net/email';\n      this.postDBApi = 'https://nithin-annam-portfolio.azurewebsites.net/';\n    }\n    PostMessage(input) {\n      this.http.post(this.mailApi, input, {\n        responseType: 'json'\n      }).pipe(switchMap(response => {\n        if (response) {\n          // post to another API after a successful first post\n          return this.http.post(this.postDBApi, input, {\n            responseType: 'json'\n          });\n        } else {\n          throw new Error('First request was not successful.');\n        }\n      }), map(secondResponse => {\n        if (secondResponse) {\n          // Return a success message for a successful second request\n          return 'Thank you for reaching out! I will get back to you as soon as possible.';\n        } else {\n          throw new Error('Second request was not successful.');\n        }\n      }), catchError(error => {\n        // Return the error message\n        return of(`Request failed: ${error.message}`);\n      }));\n    }\n  }\n  ContactService.ɵfac = function ContactService_Factory(t) {\n    return new (t || ContactService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContactService,\n    factory: ContactService.ɵfac,\n    providedIn: 'root'\n  });\n  return ContactService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}